{
    "status":"200",
    "data":[
        {
            "txt":"什么是字符串常量池？字符串常量池位于堆内存中，专门用来存储字符串常量，可以提高内存的使用率，避免开辟多块空间存储相同的字符串。"
        },
        {
            "txt":"String有哪些特性？（1）不变性（2）常量池优化（3）final定义"
        },
        {
            "txt":"如何将字符串反转？使用StringBuilder或者stringBuffer的reverse()方法。"
        },
        {
            "txt":"String、StringBuffer、StringBuilder区别 ！ String中的对象是不可变的，常量，线程安全。适合操作少量数据。StringBuffer对象可变，加了同步锁，线程安全的。多线程环境下操作大量数据。StringBuilder对象可变，线程不安全。单线程环境下操作字符串缓冲区，大量数据。"
        },
        {
            "txt":"基本数据类型？数值型，整数类型(byte,short,int,long)，浮点类型(float,double)，字符型(char)，布尔型(boolean)"
        },
        {
            "txt":"引用数据类型？类(class)接口(interface)数组([])"
        },
        {
            "txt":"Java语言采用何种编码方案？有何特点？ Java语言采用Unicode编码标准，Unicode（标准码），它为每个字符制订了一个唯一的数值，因此在任何的语言，平台，程序都可以放心的使用。 "
        },
        {
            "txt":"什么Java注释？用于解释说明程序的文字"
        },
        {
            "txt":"访问修饰符？访问修饰符 public,private,protected,以及不写（默认）时的区别"
        },
        {
            "txt":"关键字 final 有什么用？ 用于修饰类、属性和方法；"
        },
        {
            "txt":"final finally finalize区别 final可以修饰类、变量、方法，修饰类表示该类不能被继承、修饰方法表示该方法不能被重写、修饰变量表示该变量是一个常量不能被重新赋值。finally一般作用在try-catch代码块中，在处理异常的时候，通常我们将一定要执行的代码方法finally代码块中，表示不管是否出现异常，该代码块都会执行，一般用来存放一些关闭资源的代码。finalize是一个方法，属于Object类的一个方法，而Object类是所有类的父类，该方法一般由垃圾回收器来调用，当我们调用System.gc() 方法的时候，由垃圾回收器调用finalize()，回收垃圾，一个对象是否可回收的最后判断"
        },
        {
            "txt":"super关键字的用法 super可以理解为是指向自己超（父）类对象的一个指针，而这个超类指的是离自己最近的一个父类。"
        },
        {
            "txt":"什么是多态机制？Java语言是如何实现多态的？ 所谓多态就是指程序中定义的引用变量所指向的具体类型和通过该引用变量发出的方法调用在编程时并不确定，而是在程序运行期间才确定，即一个引用变量倒底会指向哪个类的实例对象，该引用变量发出的方法调用到底是哪个类中实现的方法，必须在由程序运行期间才能决定。因为在程序运行时才确定具体的类，这样，不用修改源程序代码，就可以让引用变量绑定到各种不同的类实现上，从而导致该引用调用的具体方法随之改变，即不修改程序代码就可以改变程序运行时所绑定的具体代码，让程序可以选择多个运行状态，这就是多态性。"
        },
        {
            "txt":"多态的实现? Java实现多态有三个必要条件：继承、重写、向上转型。"
        },
        {
            "txt":"抽象类和接口的对比? 抽象类是用来捕捉子类的通用特性的。接口是抽象方法的集合。从设计层面来说，抽象类是对类的抽象，是一种模板设计，接口是行为的抽象，是一种行为的规范。。"
        }
    ]
}